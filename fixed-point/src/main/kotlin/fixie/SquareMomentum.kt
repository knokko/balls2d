// Generated by fixie at 08-09-2024 21:30
package fixie

import kotlin.math.min
import kotlin.math.max
import kotlin.math.abs
import kotlin.math.sqrt

@JvmInline
value class SquareMomentum internal constructor(val value: Double) : Comparable<SquareMomentum> {


	/** Gets the square momentum value, in (Ns)^2 */
	fun toDouble() = value

	override fun toString() = String.format("%.2f%s", value, "(Ns)^2")

	override operator fun compareTo(other: SquareMomentum) = this.value.compareTo(other.value)

	operator fun unaryMinus() = SquareMomentum(-value)

	operator fun plus(right: SquareMomentum) = SquareMomentum(this.value + right.value)

	operator fun minus(right: SquareMomentum) = SquareMomentum(this.value - right.value)

	operator fun div(right: SquareMomentum) = this.value / right.value

	operator fun times(right: Int) = SquareMomentum(this.value * right)

	operator fun div(right: Int) = SquareMomentum(this.value / right)

	operator fun times(right: Long) = SquareMomentum(this.value * right)

	operator fun div(right: Long) = SquareMomentum(this.value / right)

	operator fun times(right: Float) = SquareMomentum(this.value * right)

	operator fun div(right: Float) = SquareMomentum(this.value / right)

	operator fun times(right: Double) = SquareMomentum(this.value * right)

	operator fun div(right: Double) = SquareMomentum(this.value / right)

	operator fun div(right: Momentum) = Momentum.NEWTON_SECOND * toDouble() / right.toDouble()

	companion object {
		fun raw(value: Double) = SquareMomentum(value)

		val SQUARE_NEWTON_SECOND = SquareMomentum(1.0)
	}
}

operator fun Int.times(right: SquareMomentum) = right * this

val Int.squareNs
	get() = SquareMomentum.SQUARE_NEWTON_SECOND * this

operator fun Long.times(right: SquareMomentum) = right * this

val Long.squareNs
	get() = SquareMomentum.SQUARE_NEWTON_SECOND * this

operator fun Float.times(right: SquareMomentum) = right * this

val Float.squareNs
	get() = SquareMomentum.SQUARE_NEWTON_SECOND * this

operator fun Double.times(right: SquareMomentum) = right * this

val Double.squareNs
	get() = SquareMomentum.SQUARE_NEWTON_SECOND * this

fun abs(x: SquareMomentum) = SquareMomentum(abs(x.value))

fun min(a: SquareMomentum, b: SquareMomentum) = SquareMomentum(min(a.value, b.value))

fun max(a: SquareMomentum, b: SquareMomentum) = SquareMomentum(max(a.value, b.value))

fun sqrt(x: SquareMomentum) = Momentum.NEWTON_SECOND * sqrt(x.value)
